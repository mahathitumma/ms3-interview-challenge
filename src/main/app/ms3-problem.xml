<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <flow name="ms3-problemFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>
        <logger message="ms3 problem: Started processing! Given query params are #[message.inboundProperties.'http.query.params']" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Range!">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json skipNullOn = 'everywhere'
%var num1 = inboundProperties."http.query.params".num1 as :number
%var num2 = inboundProperties."http.query.params".num2 as :number
---
 result: (num1 to num2) map {
		'$': "MS3 and ME" when (($ mod 3) == 0 and ($ mod 7) == 0) 
		otherwise "MS3" when ($ mod 7) == 0 
		otherwise "ME" when ($ mod 3) == 0
		otherwise null
 } reduce ($ ++ $$) when (num1 >= 1 and num1 < 200 and num2 >= 1 and num2 <= 200) otherwise "Out of expected range! Please try with the range between 1 to 200"]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
